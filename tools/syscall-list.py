import sys
import subprocess



def main():
    with open('config', 'w') as f:
        f.write('kernel 6.5')
    # run the command python3 update-syscall-lists.py --cc cc --lock ./update-syscall-lists.py list ./config
    sys.stdout.write('/* AUTOGENERATED by update-syscall-lists.py.  */\n')
    subprocess.run(['python3', 'update-syscall-lists.py', '--cc', 'cc', '--lock', './update-syscall-lists.py', 'list.h', './config'], stdout=sys.stdout)

    with open('list.h', 'r') as f:
        lines = f.readlines()
        # sort the lines based on the syscall number
        lines.pop(0)
        lines.sort(key=lambda x: int(x.split()[2]))
    with open('list.h', 'w') as f:
        for line in lines:
            f.write(line)

    # now turn the list.h file into a list of syscalls like this:
    # typedef enum {
    #     SYSCALL_READ = 0,
    #     SYSCALL_WRITE,
    #     MAX_SYSCALL		// must be the last element in the enum
    # } syscall_t;
    # and write it to syscalls.h
    with open('list.h', 'r') as f:
        lines = f.readlines()
    with open('syscalls.h', 'w') as f:
        f.write('typedef enum {\n')
        for line in lines:
            f.write('    SYSCALL' + line.split()[1][4:].upper() + ',\n')
        f.write('    MAX_SYSCALL\n')
        f.write('} syscall_t;\n')




if __name__ == '__main__':
    main()